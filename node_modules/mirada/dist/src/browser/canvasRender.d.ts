import { Mat, Rect } from '../types/opencv';
export interface ABOptions {
    name?: string;
    canvas?: HTMLCanvasElement;
    appendToBody?: boolean;
}
export interface Result {
    canvas: HTMLCanvasElement;
    width: number;
    height: number;
}
/**
 * A sub optimal method to load a image array buffer (encoded in jpg, png) whiteouts knowing its format or size.
  * 1) creates a blob and a url object
  * * loads the url in a HTML Image (to know its dimensions )
  * * draw the image in a canvas ().
  *
  * This method is useful as a decoder for the browser without libraries
 */
export declare function renderArrayBufferInCanvas(a: ArrayBuffer, mime: string, options?: ABOptions): Promise<Result>;
export declare function renderSvgInCanvas(svg: string, options?: ABOptions): Promise<Result>;
export interface Options {
    appendToBody?: boolean;
    rgba?: boolean;
    canvas?: HTMLCanvasElement;
    region?: Rect;
    clear?: boolean;
    forceSameSize?: boolean;
}
export declare function renderInCanvas(mat: Mat, options?: Options): HTMLCanvasElement;
