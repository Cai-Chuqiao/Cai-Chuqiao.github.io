import * as cameraHelper from './cameraHelper';
import * as canvasRender from './canvasRender';
import * as VideoReader from './videoReader';
export { CameraHelper } from './cameraHelper';
export { renderArrayBufferInCanvas, renderInCanvas } from './canvasRender';
export { asHtmlImageData as getHtmlImageData, fetchImageData, fromInputFileElement } from './imageCreation';
export { VideoReader } from './videoReader';
export declare const browser: {
    VideoReader: typeof VideoReader.VideoReader;
    fromInputFileElement(a: HTMLInputElement): Promise<import("..").Mat[]>;
    fetchImageData(url: string): Promise<ImageData>;
    asHtmlImageData(img: import("..").Mat): ImageData;
    CameraHelper: typeof cameraHelper.CameraHelper;
    renderArrayBufferInCanvas(a: ArrayBuffer, mime: string, options?: canvasRender.ABOptions): Promise<canvasRender.Result>;
    renderSvgInCanvas(svg: string, options?: canvasRender.ABOptions): Promise<canvasRender.Result>;
    renderInCanvas(mat: import("..").Mat, options?: canvasRender.Options | undefined): HTMLCanvasElement;
};
